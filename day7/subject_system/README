subject_system

├─bin                           # 启动目录
│  └─boot.py                    # 快捷启动程序
│  └─initialize.py              # 初始化系统程序
├─conf                          # 配置目录
│  └─settings.py                # 配置文件
├─core                          # 主程序目录
│  └─subsystem                  # 主程序文件
├─database                      # 数据库目录
│  ├─admin                      # 管理员数据目录
│  │  └─ 若干个数据文件          # 以id为文件名的文件
│  ├─classes                    # 班级目录
│  │  └─ 若干个数据文件
│  ├─course                     # 课程目录
│  │  └─ 若干个数据文件
│  ├─school                     # 学校目录
│  │  └─ 若干个数据文件
│  ├─student                    # 学生目录
│  │  └─ 若干个数据文件
│  └─teacher                    # 讲师目录
│     └─ 若干个数据文件
├─docs                          # 文档目录
│  └─ 需求
├─lib                           # 功能库目录
│  └─admin_api.py               # 管理员接口程序
│  └─load_data.py               # 加载数据程序
│  └─logginer.py                # 日志程序
│  └─login_auth.py              # 登录验证程序
│  └─main.py                    # 主功能程序
│  └─student_api.py             # 学生接口程序
│  └─teacher_api.py             # 讲师接口程序
└─log                           # 日志目录
   └─ admin.log                 # 管理员日志文件
   └─ student.log               # 学生日志文件
   └─ teacher.log               # 讲师日志文件

操作步骤：
    1.运行boot.py 快捷启动选课系统
    2.如果启动无账号需要注册账号，根据不同的身份有不同的权限等级，0为管理员，1为讲师，2为学员
    2.默认提供三个接口视图:管理员，讲师，学员

        管理员创建学校校区、课程、讲师、班级数据
        讲师有查看数据，修改学员成绩，选择管理的班级的权限，如果管理员在创建班级时已经关联讲师，则讲师不用再选择班级
        学员只有创建自身等级的账号、交学费、查看数据的权限，且查看的数据都是有限的

    3.管理员提供修改数据功能，如果讲师和学员有误操作时可以更改会正确的数据
    4.管理员创建数据时做了筛选处理，所以创建数据是请周密考虑